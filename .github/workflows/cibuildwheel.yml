name: CI build wheels

on:
  workflow_dispatch:
  release:
    types:
      - released

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_TEST_COMMAND: python -s -c "import pysces; pysces.test(3)"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_ARCHS_LINUX: "x86_64"
      CIBW_ARCHS_WINDOWS: "AMD64"
      CIBW_ARCHS_MACOS: "x86_64"
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-12]
        os: [windows-latest]
#        python: [311, 310, 39, 38]
        python: [312]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.12'

      - name: (macOS) Provide gfortran
        if: matrix.os == 'macos-12'
        run: |
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version

      - name: (windows) Update PATH for Strawberry
        if: matrix.os == 'windows-latest'
        uses: myci-actions/export-env-var-powershell@1
        with:
          name: PATH
          value: C:\Strawberry\c\bin;$env:PATH

      - name: Build wheels for CPython
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: "cp${{ matrix.python }}-*"
          CIBW_SKIP: "*musllinux*"
          CIBW_BEFORE_BUILD: python -m pip install scikit-build meson

      - uses: actions/upload-artifact@v3
        with:
          name: wheels_and_tarball
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          pip install scikit-build
          python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          name: wheels_and_tarball
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # to publish when a GitHub Release is created:
    if: github.event_name == 'release' && github.event.action == 'released'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels_and_tarball
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
