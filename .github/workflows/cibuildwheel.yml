name: CI build wheels

on:
  workflow_dispatch:
  release:
    types:
      - released

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_TEST_COMMAND: python -s -c "import pysces; pysces.test(3)"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_ARCHS_LINUX: "x86_64"
      CIBW_ARCHS_WINDOWS: "AMD64"
      CIBW_ARCHS_MACOS: "x86_64"
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: (macOS) Download and install gfortran
        if: matrix.os == 'macOS-10.15'
        run: |
          curl -L https://github.com/fxcoudert/gfortran-for-macOS/releases/download/10.2/gfortran-10.2-Catalina.dmg -o /tmp/gfortran.dmg &&
          sudo hdiutil attach /tmp/gfortran.dmg &&
          sudo installer -pkg /Volumes/gfortran-10.2-Catalina/gfortran.pkg -target /

      - name: Build wheels for CPython 3.9
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_BEFORE_BUILD: pip install numpy~=1.20.0

      - name: Build wheels for CPython 3.8
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BUILD: "cp38-*"
          CIBW_BEFORE_BUILD: pip install numpy~=1.17.0

      - name: Build wheels for CPython 3.6 and 3.7
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BUILD: "cp36-* cp37-*"
          CIBW_BEFORE_BUILD: pip install numpy~=1.15.0

      - uses: actions/upload-artifact@v2
        with:
          name: wheels_and_tarball
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: |
          pip install numpy
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: wheels_and_tarball
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # to publish when a GitHub Release is created:
    if: github.event_name == 'release' && github.event.action == 'released'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels_and_tarball
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
