name: CI build wheels

on:
  workflow_dispatch:
  release:
    types:
      - released

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_TEST_COMMAND: python -s -c "import pysces; pysces.test(3)"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_ARCHS_LINUX: "x86_64"
      CIBW_ARCHS_WINDOWS: "AMD64"
      CIBW_ARCHS_MACOS: "x86_64"
    strategy:
      matrix:
        os: [ubuntu-latest] #, windows-2019, macos-12]
        python: [311] #, 310] #, 39, 38]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.10'

      - name: (macOS) Download and install gfortran
        if: matrix.os == 'macos-12'
        run: |
          curl -L https://github.com/fxcoudert/gfortran-for-macOS/releases/download/12.1-monterey/gfortran-Intel-12.1-Monterey.dmg -o /tmp/gfortran-intel.dmg &&
          sudo hdiutil attach /tmp/gfortran-intel.dmg &&
          sudo installer -pkg /Volumes/gfortran-Intel-12.1-Monterey/gfortran-Intel-12.1-Monterey/gfortran.pkg -target /

      - name: Build wheels for CPython
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_BUILD: "cp${{ matrix.python }}-*"
          CIBW_SKIP: "*musllinux*"
          CIBW_BEFORE_BUILD: pip install scikit-build

      - uses: actions/upload-artifact@v3
        with:
          name: wheels_and_tarball
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          pip install scikit-build
          python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          name: wheels_and_tarball
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # to publish when a GitHub Release is created:
    if: github.event_name == 'release' && github.event.action == 'released'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels_and_tarball
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
