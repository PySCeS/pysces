name: CI build wheels

on:
  workflow_dispatch:
  release:
    types:
      - released

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_TEST_COMMAND: python -s -c "import pysces; pysces.test(3)"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_ARCHS_LINUX: "x86_64"
      CIBW_ARCHS_WINDOWS: "AMD64"
      CIBW_ARCHS_MACOS: "x86_64"
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-12]
        os: [windows-latest]
#        python: [311, 310, 39, 38]
        python: [312]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.12'

      - name: (macOS) Provide gfortran
        if: matrix.os == 'macos-12'
        run: |
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version

      - name: (windows) Update PATH for Strawberry
        if: matrix.os == 'windows-latest'
        uses: myci-actions/export-env-var-powershell@1
        with:
          name: PATH
          value: C:\Users\runneradmin\AppData\Roaming\Python\Python312\Scripts;C:\hostedtoolcache\windows\Python\3.12.0\x64\Scripts;C:\hostedtoolcache\windows\Python\3.12.0\x64;C:\PROGRA~1\MongoDB\bin;C:\aliyun-cli;C:\vcpkg;C:\Program Files (x86)\NSIS\;C:\tools\zstd;C:\Program Files\Mercurial\;C:\hostedtoolcache\windows\stack\2.13.1\x64;C:\cabal\bin;C:\\ghcup\bin;C:\mingw64\bin;C:\Program Files\dotnet;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\R\R-4.3.1\bin\x64;C:\SeleniumWebDrivers\GeckoDriver;C:\Program Files (x86)\sbt\bin;C:\Program Files (x86)\GitHub CLI;C:\Program Files\Git\bin;C:\Program Files (x86)\pipx_bin;C:\npm\prefix;C:\hostedtoolcache\windows\go\1.20.10\x64\bin;C:\hostedtoolcache\windows\Python\3.9.13\x64\Scripts;C:\hostedtoolcache\windows\Python\3.9.13\x64;C:\hostedtoolcache\windows\Ruby\3.0.6\x64\bin;C:\Program Files\OpenSSL\bin;C:\tools\kotlinc\bin;C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\8.0.382-5\x64\bin;C:\Program Files\ImageMagick-7.1.1-Q16-HDRI;C:\Program Files\Microsoft SDKs\Azure\CLI2\wbin;C:\ProgramData\kind;C:\Program Files\Microsoft\jdk-11.0.16.101-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\ProgramData\Chocolatey\bin;C:\Program Files\PowerShell\7\;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\CMake\bin;C:\ProgramData\chocolatey\lib\maven\apache-maven-3.8.7\bin;C:\Program Files\Microsoft Service Fabric\bin\Fabric\Fabric.Code;C:\Program Files\Microsoft SDKs\Service Fabric\Tools\ServiceFabricLocalClusterManager;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files\GitHub CLI\;c:\tools\php;C:\Program Files (x86)\sbt\bin;C:\SeleniumWebDrivers\ChromeDriver\;C:\SeleniumWebDrivers\EdgeDriver\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\SessionManagerPlugin\bin\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\LLVM\bin;C:\Users\runneradmin\.dotnet\tools;C:\Users\runneradmin\.cargo\bin;C:\Users\runneradmin\AppData\Local\Microsoft\WindowsApps

      - name: Build wheels for CPython
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: "cp${{ matrix.python }}-*"
          CIBW_SKIP: "*musllinux*"
          CIBW_BEFORE_BUILD: python -m pip install scikit-build meson

      - uses: actions/upload-artifact@v3
        with:
          name: wheels_and_tarball
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          pip install scikit-build
          python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          name: wheels_and_tarball
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # to publish when a GitHub Release is created:
    if: github.event_name == 'release' && github.event.action == 'released'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels_and_tarball
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
